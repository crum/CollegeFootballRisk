// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace CollegeFootballRisk.RestClient
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using InternalModels;

    /// <summary>
    /// Companion API for College Football Risk
    /// </summary>
    public partial interface ICollegeFootballRiskClient : IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


            /// <summary>
        /// Player information
        /// </summary>
        /// Player information
        /// <param name='player'>
        /// Player username without the "u/" (e.g. "u/BlueSCar" would just be
        /// "BlueSCar")
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Player>> GetPlayerWithHttpMessagesAsync(string player, Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// List of players
        /// </summary>
        /// List of players
        /// <param name='team'>
        /// Team name filter
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<TeamPlayer>>> GetPlayersWithHttpMessagesAsync(string? team = default, Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Game leaderboard
        /// </summary>
        /// Game leaderboard
        /// <param name='season'>
        /// Season number
        /// </param>
        /// <param name='day'>
        /// Day number
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<LeaderboardTeam>>> GetLeaderboardWithHttpMessagesAsync(int season, int day, Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get turns list
        /// </summary>
        /// List of turns
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<Turn>>> GetTurnsWithHttpMessagesAsync(Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get current team strength
        /// </summary>
        /// Team strength for the most recent turns
        /// <param name='team'>
        /// Team name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<TeamStrength>> GetTeamStrengthWithHttpMessagesAsync(string team, Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get historical team stats
        /// </summary>
        /// Historical team statistics
        /// <param name='team'>
        /// Team name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<TeamHistory>>> GetTeamHistoryWithHttpMessagesAsync(string team, Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get players moves by turn
        /// </summary>
        /// Get player moves by turn
        /// <param name='season'>
        /// Season filter
        /// </param>
        /// <param name='day'>
        /// Day filter
        /// </param>
        /// <param name='team'>
        /// Team name filter
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<TeamTurnPlayer>>> GetPlayerMovesByTurnWithHttpMessagesAsync(int season, int day, string? team = default, Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get list of teams
        /// </summary>
        /// Teams list
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<Team>>> GetTeamsWithHttpMessagesAsync(Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get list of territories, including ownership status for the given
        /// turn
        /// </summary>
        /// Territories list
        /// <param name='season'>
        /// Season filter
        /// </param>
        /// <param name='day'>
        /// Day filter
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<Territory>>> GetTerritoriesWithHttpMessagesAsync(int? season = default, int? day = default, Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get historical territory data
        /// </summary>
        /// Historical territory data
        /// <param name='territory'>
        /// Territory name
        /// </param>
        /// <param name='season'>
        /// Season
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<TerritoryHistory>>> GetTerritoryHistoryWithHttpMessagesAsync(string territory, int season, Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get territory statistics for a specific turn
        /// </summary>
        /// Territory statistics for a specific turn
        /// <param name='territory'>
        /// Territory name
        /// </param>
        /// <param name='season'>
        /// Season
        /// </param>
        /// <param name='day'>
        /// Day
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<TerritoryTurn>>> GetTerritoryTurnWithHttpMessagesAsync(string territory, int season, int day, Dictionary<string, List<string>>? customHeaders = null, CancellationToken cancellationToken = default);

    }
}
